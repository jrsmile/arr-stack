version: '3.8'
services:
 traefik:
  container_name: traefik
  restart: unless-stopped
  #ports:
    # - "80:80"
    #- "8080:8080"
  volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
  command:
    - "--log.level=DEBUG"
    - "--api.insecure=true"
    - "--providers.docker=true"
    - "--providers.docker.exposedbydefault=false"
    - "--entrypoints.web.address=:80"
  image: "traefik:v2.5"
  network_mode: "service:vpn"
  logging:
   driver: json-file
   options:
    max-size: 1m

 radarr:
  container_name: radarr
  restart: unless-stopped
  #ports:
   #- 7878:7878
  volumes:
   - /home/user/radarr:/config
   - nas-share-data:/data
  environment:
   - PUID=1000
   - PGID=1000
   - TZ=Europe/Berlin
  image: linuxserver/radarr
  network_mode: "service:vpn"
  labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.docker`)"
      - "traefik.http.routers.radarr.entrypoints=web"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
  logging:
   driver: json-file
   options:
    max-size: 1m

 sonarr:
  container_name: sonarr
  restart: unless-stopped
  #ports:
   #- 8989:8989
  volumes:
   - /home/user/sonarr:/config
   - nas-share-data:/data
  environment:
   - PUID=1000
   - PGID=1000
   - TZ=Europe/Berlin
  image: linuxserver/sonarr
  network_mode: "service:vpn"
  links:
    - vpn2
    - vpn3
  labels:
    - "traefik.enable=true"
    - "traefik.http.routers.sonarr.rule=Host(`sonarr.docker`)"
    - "traefik.http.routers.sonarr.entrypoints=web"
    - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
  logging:
   driver: json-file
   options:
    max-size: 1m

 lidarr:
  container_name: lidarr
  restart: unless-stopped
  #ports:
   #- 8686:8686
  volumes:
   - /home/user/lidarr:/config
   - nas-share-data:/data
  environment:
   - PUID=1000
   - PGID=1000
   - TZ=Europe/Berlin
  image: linuxserver/lidarr
  network_mode: "service:vpn"
  links:
    - vpn2
    - vpn3
  labels:
    - "traefik.enable=true"
    - "traefik.http.routers.lidarr.rule=Host(`lidarr.docker`)"
    - "traefik.http.routers.lidarr.entrypoints=web"
    - "traefik.http.services.lidarr.loadbalancer.server.port=8686"
  logging:
   driver: json-file
   options:
    max-size: 1m

 readarr:
  container_name: readarr
  restart: unless-stopped
  #ports:
   #- 8787:8787
  volumes:
    - /home/user/readarr:/config
    - nas-share-data:/data
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/Berlin
  image: linuxserver/readarr:nightly
  network_mode: "service:vpn"
  links:
    - vpn2
    - vpn3
  labels:
    - "traefik.enable=true"
    - "traefik.http.routers.readarr.rule=Host(`readarr.docker`)"
    - "traefik.http.routers.readarr.entrypoints=web"
    - "traefik.http.services.readarr.loadbalancer.server.port=8787"
  logging:
   driver: json-file
   options:
    max-size: 1m

 prowlarr:
  container_name: prowlarr
  restart: unless-stopped
  #ports:
   #- 9696:9696
  volumes:
    - /home/user/prowlarr:/config
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/Berlin
  image: ghcr.io/linuxserver/prowlarr:develop
  network_mode: "service:vpn"
  links:
    - vpn2
    - vpn3
  labels:
    - "traefik.enable=true"
    - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.docker`)"
    - "traefik.http.routers.prowlarr.entrypoints=web"
    - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
  logging:
   driver: json-file
   options:
    max-size: 1m

 deluge:
  container_name: deluge
  restart: unless-stopped
  #ports:
    #- 8112:8112
    #- 51413:51413
    #- 51413:51413/udp
  volumes:
    - /home/user/deluge:/config
    - nas-share-data:/data
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/Berlin
    - DELUGE_LOGLEVEL=error #optional
  image: lscr.io/linuxserver/deluge
  network_mode: "service:vpn"
  labels:
  - "traefik.enable=true"
  - "traefik.http.routers.deluge.rule=Host(`deluge.docker`)"
  - "traefik.http.routers.deluge.entrypoints=web"
  - "traefik.http.services.deluge.loadbalancer.server.port=8112"
  logging:
   driver: json-file
   options:
    max-size: 1m

 nzbget:
    image: lscr.io/linuxserver/nzbget
    container_name: nzbget
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /home/user/nzbget:/config
      - nas-share-data:/data
    #ports:
      #- 6789:6789
    restart: unless-stopped
    network_mode: "service:vpn2"
    links:
    - vpn1
    - vpn3
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.nzbget.rule=Host(`nzbget.docker`)"
    - "traefik.http.routers.nzbget.entrypoints=web"
    - "traefik.http.services.nzbget.loadbalancer.server.port=6789"
    logging:
     driver: json-file
     options:
      max-size: 1m

 aria2:
    container_name: aria2
    image: p3terx/aria2-pro
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK_SET=022
      - RPC_SECRET=secret
      - RPC_PORT=6800
      - LISTEN_PORT=6888
      - DISK_CACHE=64M
      - IPV6_MODE=false
      - UPDATE_TRACKERS=true
      - CUSTOM_TRACKER_URL=
      - TZ=Asia/Shanghai
    volumes:
      - /home/user/aria2:/config
      - nas-share-data:/data
    network_mode: "service:vpn3"
    links:
    - vpn1
    - vpn2
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: 1m

 ariang:
    container_name: ariang
    image: p3terx/ariang
    command: --port 6880 --ipv6
    network_mode: "service:vpn3"
    restart: unless-stopped
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.ariang.rule=Host(`ariang.docker`)"
    - "traefik.http.routers.ariang.entrypoints=web"
    - "traefik.http.services.ariang.loadbalancer.server.port=6880"
    logging:
      driver: json-file
      options:
        max-size: 1m

 flaresolverr:
    image: flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/Berlin
    restart: unless-stopped
    network_mode: "service:vpn"
    logging:
     driver: json-file
     options:
      max-size: 1m

 unpackerr:
    image: golift/unpackerr
    container_name: unpackerr
    volumes:
      - nas-share-data:/data
    restart: always
    user: 1000:1000
    network_mode: "service:vpn"
    # What you see below are defaults. You only need to include things you change.
    environment:
      - TZ=Europe/Berlin
      # General config
      - UN_DEBUG=false
      - UN_LOG_FILE=
      - UN_LOG_FILES=10
      - UN_LOG_FILE_MB=10
      - UN_INTERVAL=2m
      - UN_START_DELAY=1m
      - UN_RETRY_DELAY=5m
      - UN_MAX_RETRIES=3
      - UN_PARALLEL=1
      - UN_FILE_MODE=0644
      - UN_DIR_MODE=0755
      # Sonarr Config
      - UN_SONARR_0_URL=http://127.0.0.1:8989
      - UN_SONARR_0_API_KEY=
      - UN_SONARR_0_PATHS_0=/data/downloads
      - UN_SONARR_0_PROTOCOLS=torrent
      - UN_SONARR_0_TIMEOUT=10s
      - UN_SONARR_0_DELETE_ORIG=true
      - UN_SONARR_0_DELETE_DELAY=5m
      # Radarr Config
      - UN_RADARR_0_URL=http://127.0.0.1:7878
      - UN_RADARR_0_API_KEY=
      - UN_RADARR_0_PATHS_0=/data/downloads
      - UN_RADARR_0_PROTOCOLS=torrent
      - UN_RADARR_0_TIMEOUT=10s
      - UN_RADARR_0_DELETE_ORIG=true
      - UN_RADARR_0_DELETE_DELAY=5m
      # Lidarr Config
      - UN_LIDARR_0_URL=http://127.0.0.1:8686
      - UN_LIDARR_0_API_KEY=
      - UN_LIDARR_0_PATHS_0=/data/downloads
      - UN_LIDARR_0_PROTOCOLS=torrent
      - UN_LIDARR_0_TIMEOUT=10s
      - UN_LIDARR_0_DELETE_ORIG=true
      - UN_LIDARR_0_DELETE_DELAY=5m
      # Readarr Config
      - UN_READARR_0_URL=http://127.0.0.1:8787
      - UN_READARR_0_API_KEY=
      - UN_READARR_0_PATHS_0=/data/downloads
      - UN_READARR_0_PROTOCOLS=torrent
      - UN_READARR_0_TIMEOUT=10s
      - UN_READARR_0_DELETE_ORIG=true
      - UN_READARR_0_DELETE_DELAY=5m
      # Folder Config
      - UN_FOLDER_0_PATH=
      - UN_FOLDER_0_EXTRACT_PATH=
      - UN_FOLDER_0_DELETE_AFTER=10m
      - UN_FOLDER_0_DELETE_ORIGINAL=false
      - UN_FOLDER_0_DELETE_FILES=false
      - UN_FOLDER_0_MOVE_BACK=false
      # Webhook Config
      - UN_WEBHOOK_0_URL=
      - UN_WEBHOOK_0_NAME=
      - UN_WEBHOOK_0_NICKNAME=Unpackerr
      - UN_WEBHOOK_0_CHANNEL=
      - UN_WEBHOOK_0_TIMEOUT=5s
      - UN_WEBHOOK_0_SILENT=true
      - UN_WEBHOOK_0_IGNORE_SSL=false
      - UN_WEBHOOK_0_EXCLUDE=[]
      - UN_WEBHOOK_0_EVENTS=[0]
      - UN_WEBHOOK_0_TEMPLATE_PATH=
      - UN_WEBHOOK_0_CONTENT_TYPE=application/json
    security_opt:
      - no-new-privileges:true
    logging:
     driver: json-file
     options:
      max-size: 1m

 netshoot:
    image: nicolaka/netshoot
    container_name: netshoot
    command: tail -f /dev/null
    volumes:
      - /home/user:/data-old
      - nas-share-config:/nas/config
      - nas-share-data:/data
    restart: always
    user: 1000:1000
    security_opt:
      - no-new-privileges:true
    logging:
     driver: json-file
     options:
      max-size: 1m

 vpn:
  container_name: vpn
  restart: unless-stopped
  ports:
    - 8118:8118 # privoxy
    - 8112:8112 # deluge
    - 5299:5299 # lazylib
    - 9117:9117 # jackett
    - 8686:8686 # lidarr
    - 8989:8989 # sonarr
    - 7878:7878 # radarr
    - 9696:9696 # prowlarr
    - 8787:8787 # readarr
    - 8191:8191 # flaresolverr
    #- 6789:6789 # nzbget
    - 80:80 # traefik
    - 8080:8080 # traefik dashboard
  cap_add:
    - NET_ADMIN
  devices:
    - /dev/net/tun
  dns:
    - 103.86.96.100
    - 103.86.99.100
  volumes:
    - /etc/localtime:/etc/localtime:ro
    - ovpn-data:/app/ovpn/config
  environment:
    - USERNAME=${USERNAME}
    - PASSWORD=${PASSWORD}
    - LOCAL_NETWORK=192.168.178.0/24
    - COUNTRY=DE
  networks:
    - default
  image: jeroenslot/nordvpn-proxy:latest
  labels:
  - "traefik.enable=true"
  - "traefik.http.routers.dashboard.rule=Host(`traefik.docker`)"
  - "traefik.http.routers.dashboard.entrypoints=web"
  - "traefik.http.routers.dashboard.service=dashboard@internal"
  - "traefik.http.routers.api.rule=Host(`traefik.docker`) && PathPrefix(`/api`)"
  - "traefik.http.routers.api.entrypoints=web"
  - "traefik.http.routers.api.service=api@internal"
  logging:
   driver: json-file
   options:
    max-size: 1m

 vpn2:
  container_name: vpn2
  restart: unless-stopped
  ports:
    - 8119:8118 # privoxy
    - 6789:6789 # nzbget
  cap_add:
    - NET_ADMIN
  devices:
    - /dev/net/tun
  dns:
    - 103.86.96.100
    - 103.86.99.100
  volumes:
    - /etc/localtime:/etc/localtime:ro
    - ovpn-data:/app/ovpn/config
  environment:
    - USERNAME=${USERNAME}
    - PASSWORD=${PASSWORD}
    - LOCAL_NETWORK=192.168.178.0/24
    - COUNTRY=BE
  networks:
    - default
  image: jeroenslot/nordvpn-proxy:latest
  logging:
   driver: json-file
   options:
    max-size: 1m

 vpn3:
  container_name: vpn3
  restart: unless-stopped
  ports:
    - 8120:8118 # privoxy
    - 6800:6800 # aria
    - 6888:6888 # aria rpc
    - 6888:6888/udp
    - 6880:6880 # aria-web
  cap_add:
    - NET_ADMIN
  devices:
    - /dev/net/tun
  dns:
    - 103.86.96.100
    - 103.86.99.100
  volumes:
    - /etc/localtime:/etc/localtime:ro
    - ovpn-data:/app/ovpn/config
  environment:
    - USERNAME=${USERNAME}
    - PASSWORD=${PASSWORD}
    - LOCAL_NETWORK=192.168.178.0/24
    - COUNTRY=NL
  networks:
    - default
  image: jeroenslot/nordvpn-proxy:latest
  logging:
   driver: json-file
   options:
    max-size: 1m

 dns:
  container_name: dns
  restart: unless-stopped
  ports:
    - 53:53/udp
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
  environment:
    - DNS_DOMAIN=docker
    - HOSTMACHINE_IP=127.0.0.1
    - EXTRA_HOSTS="" # optional
  image: ruudud/devdns
  logging:
   driver: json-file
   options:
    max-size: 1m

 tdarr:
    container_name: tdarr
    image: haveagitgat/tdarr:latest
    restart: unless-stopped
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
    environment:
      - TZ=Europe/London
      - PUID=1000
      - PGID=1000
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
    volumes:
      - /home/user/tdarr/server:/app/server
      - /home/user/tdarr/configs:/app/configs
      - /home/user/tdarr/logs:/app/logs
      - nas-share-data:/data
      - /home/user/tdarr/transcode_cache:/temp
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.tdarr.rule=Host(`tdarr.docker`)"
    - "traefik.http.routers.tdarr.entrypoints=web"
    - "traefik.http.services.tdarr.loadbalancer.server.port=8265"

 jellyfin:
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      #- JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
    volumes:
      - /home/user/jellyfin:/config
      - nas-share-data:/data
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    restart: unless-stopped
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.jelly.rule=Host(`jelly.docker`)"
    - "traefik.http.routers.jelly.entrypoints=web"
    - "traefik.http.services.jelly.loadbalancer.server.port=8096"
    logging:
     driver: json-file
     options:
      max-size: 1m

 glances:
    container_name: glances
    image: joweisberg/glances:latest
    restart: unless-stopped
    pid: host
    ports:
      - 61208:61208
    environment:
      - TZ=Europe/Berlin
      - GLANCES_OPT=--webserver
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/user/glances:/glances/conf
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.glances.rule=Host(`glances.docker`)"
    - "traefik.http.routers.glances.entrypoints=web"
    - "traefik.http.services.glances.loadbalancer.server.port=61208"
    logging:
     driver: json-file
     options:
      max-size: 1m

 muximux:
    image: lscr.io/linuxserver/muximux
    container_name: muximux
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /home/user/muximux:/config
    ports:
      - 9712:80
    restart: unless-stopped
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.muxi.rule=Host(`muxi.docker`)"
    - "traefik.http.routers.muxi.entrypoints=web"
    - "traefik.http.services.muxi.loadbalancer.server.port=9712"
    logging:
     driver: json-file
     options:
      max-size: 1m

volumes:
  ovpn-data:
  nas-share-config:
    driver_opts:
      type: cifs
      o: "uid=1000,username=${CIFS_USERNAME},password=${CIFS_PASSWORD},nounix,file_mode=0770,dir_mode=0770"
      device: "//192.168.178.22/foldarr/config"
  nas-share-data:
    driver_opts:
      type: cifs
      o: "uid=1000,username=${CIFS_USERNAME},password=${CIFS_PASSWORD},nounix,file_mode=0770,dir_mode=0770"
      device: "//192.168.178.22/foldarr/data"